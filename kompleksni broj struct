
#include <ctype.h>
#include <math.h>
#include <stdio.h>
struct Kompleksni {
  int re, im;
};

struct Kompleksni Stepenuj(struct Kompleksni k, int stepen) {
  double r = sqrt(pow(k.re, 2) + pow(k.im, 2));
  struct Kompleksni rezultat;
  double ugao;
  r = pow(r, stepen);
  ugao = stepen * atan2(k.im, k.re);
  rezultat.re = round(r * cos(ugao));
  rezultat.im = round(r * sin(ugao));
  return rezultat;
}

struct Kompleksni saberi(struct Kompleksni k1, struct Kompleksni k2) {
  struct Kompleksni rez;
  rez.re = k1.re + k2.re;
  rez.im = k1.im + k2.im;
  return rez;
}
struct Kompleksni oduzmi(struct Kompleksni k1, struct Kompleksni k2) {
  struct Kompleksni rez;
  rez.re = k1.re - k2.re;
  rez.im = k1.im - k2.im;
  return rez;
}
void unesi(char niz[], int velicina) {
  char znak = getchar();
  if (znak == '\n')
    znak = getchar();
  int i = 0;
  while (i < velicina - 1 && znak != '\n') {
    niz[i] = znak;
    i++;
    znak = getchar();
  }
  niz[i] = '\0';
}
void unesi_u_kompl_br(char *p, struct Kompleksni *k) {
  int re = 0, im = 0, neg = 1;
  while (*p != ',') {
    if (*p == '-') {
      neg = -1;
    } else if (isdigit(*p)) {
      re = re * 10 + (*p-48);
    }
    p++;
  }
  re *= neg;
  neg = 1;
  while (*p != ')' && *p != '\0') {
    if (*p == '-')
      neg = -1;
    else if (isdigit(*p)) {
      im = im * 10 + (*p-48);
    }
    p++;
  }
  im *= neg;
  k->re = re;
  k->im = im;
}
void ispis(const struct Kompleksni *k){
    printf("Rezultat: ");
    if(k->re==0 && k->im==0)printf("0");
    else if(k->re==0){
        if(k->im==1) printf("i");
        else if(k->im==-1)printf("-i");
        else printf("%di",k->im);
    } 
    else if(k->im==0)printf("%d",k->re);
    else if(k->im==1)printf("%d+i",k->re);
    else if(k->im==-1)printf("%d-i",k->re);
    else if(k->im<0)printf("%d%di",k->re,k->im);
    else if(k->im>0)printf("%d+%di",k->re,k->im);
    else printf("%d+%di",k->re,k->im);
}

int main() {
  struct Kompleksni k, k2, rezultat;
  char ulaz[2], unosBroja[10];
  int stepen;
  printf("Unesite operator: ");
  unesi(ulaz, 2);
  switch (ulaz[0]) {
  case '^':
    printf("Unesite kompleksni broj: ");
    unesi(unosBroja, 10);
    unesi_u_kompl_br(unosBroja, &k);
    printf("Unesite stepen: ");
    scanf("\n%d", &stepen);
    rezultat = Stepenuj(k, stepen);
    ispis(&rezultat);
    break;
  case '+':
    printf("Unesite prvi kompleksni broj: ");
    unesi(unosBroja, 10);
    unesi_u_kompl_br(unosBroja, &k);
    printf("Unesite drugi kompleksni broj: ");
    unesi(unosBroja, 10);
    unesi_u_kompl_br(unosBroja, &k2);
    rezultat = saberi(k, k2);
    ispis(&rezultat);
    break;
  case '-':
    printf("Unesite prvi kompleksni broj: ");
    unesi(unosBroja, 10);
    unesi_u_kompl_br(unosBroja, &k);
    printf("Unesite drugi kompleksni broj: ");
    unesi(unosBroja, 10);
    unesi_u_kompl_br(unosBroja, &k2);
    rezultat = oduzmi(k, k2);
    ispis(&rezultat);
    break;
  default:
    break;
  }

  return 0;
}

/*
Data je struktura:

	struct Kompleksni {
		int re, im;
	};
Potrebno je napisati prototip funkcije
struct Kompleksni Stepenuj(struct Kompleksni k, int stepen), koja će obaviti stepenovanje kompleksnog broja, koji je prosljeđen kao argument.
Također je potrebno napisati funkcije za sabiranje i oduzimanje kompleksnih brojeva. 
U mainu obezbijediti da korisnik unose koju operaciju želi obaviti, (+ sabiranje, - oduzimanje, ^ stepenovanje),
te se od njega traži unos potrebnih podataka i obavlja data operacija. Format unosa kompleksnog broja je (re,im).

Primjer ulaza i izlaza:

    Unesite operator: ^
    Unesite kompleksni broj: (3,2)
    Unesite stepen: 3
    Rezultat: -9+46i
*/
